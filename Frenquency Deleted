  //Timer 1 will be set up as a counter
  /*TCCR1A=0;
  TCCR1B=(1<
  TIMSK1=(1<
  lcd.begin(16, 2)
  
  lcd.print("FrequencyCounter")
  lcd.setCursor(0, 1);
  lcd.print("  v1.0  ");
  delay(2000);
}

function GenSineWave(){
  y=Asin(2piF+phase shift)
  
  }
void loop() {
  // Increment our time counter every loop.
  timeAroundLoop = timeAroundLoop + timeAdditionValue;
  for (int i = 0; i < howManyLeds; i++)
  {
    // Each LED fades fater or slower than each other - multiply time by speed.
    tempSinVal = timeAroundLoop*currentFadeAmount[i];

    // This gives us a sinewave value of the adjusted time.  Values from -1 to 1.
    tempSinVal = sin(tempSinVal);

    // Absolute the sine wave (no negatives) to give a bouncing ball style wave.
    tempSinVal = abs(tempSinVal);

    // Do 1-value, to turn the bouncing ball upside down.
    // It now looks like a hanging garland, just touching the ground.
    tempSinVal = 1-tempSinVal;

    // Set the brightness to this value, multiplied by our max brightness.
    // The scale now goes from 0-255 instead of 0-1.
    currentBrightness[i] = tempSinVal * maxBrightness;
    // Write this value to the pin.
    analogWrite(usedPins[i], currentBrightness[i]);
  }

  // I probably don't need to do a delay here, I could just slow down the timeAroundLoop more.
  delay(30);
  
  // put your main code here, to run repeatedly:
  delay(1000);
  
  lcd.clear();
  //if doesn't work, set frequency again
  frequency = (TCNT1H<<8)|TCNT1L;
  
  if (frequency>40000000);
 // frequency -= 4294900000;
  
 // temp = 65536*(unsigned long)tovf1;
 // frequency +=temp;
  
 // lcd.setCursor(0,1);
 // if(frequency<100)
 // lcd.print(" ");
 // else if (frequency < 10000)
 // lcd.print(" ");
 // else if (frequency < 1000000)
 // lcd.print(" ");
 // else
 // lcd.print(" ");
 // lcd.print(frequency);
 // lcd.print("Hz");
*/}
